version: 0.2

env:
  shell: bash
  variables:
    TERRAFORM_VERSION: 1.6.5
    INTERNAL_REPOSITORY: dx-migrations-symlink-internal
    DELETER_REPOSITORY: dx-migrations-symlink-deleter
    TAGGER_REPOSITORY: dx-migrations-symlink-tagger
    IMAGE_TAG: main
    INTERNAL_SERVICES_DIR: dx-symlink-internal
    DELETER_SERVICES_DIR: dx-symlink-deleter
    TAGGER_SERVICES_DIR: dx-symlink-tagger

  parameter-store:
    AWS_ACCOUNT_ID: '/symlink/aws-account-id'
    AWS_DEFAULT_REGION: '/symlink/aws-default-region'

    DNANEXUS_DRIVE_ID: '/symlink/dnanexus_drive_id'
    DNANEXUS_PROJECT_ID: '/symlink/dnanexus_project_id'
    DNANEXUS_SYMLINKS_FOLDER: '/symlink/dnanexus_symlinks_folder'
    DNANEXUS_TOKEN_SECRET_NAME: '/symlink/dnanexus_token_secret_name'
    DNANEXUS_TOKEN_SECRET_KEY: '/symlink/dnanexus_token_secret_key'
    
    AWS_TARGET_BUCKET_NAME: '/symlink/target_bucket_name'
    AWS_TARGET_BUCKET_FILTER_PREFIX: '/symlink/target_bucket_filter_prefix'

    LAMBDA_INTERNAL_IMAGE_URI: '/symlink/symlink_lambda_internal_image_uri'
    LAMBDA_DELETER_IMAGE_URI: '/symlink/symlink_lambda_deleter_image_uri'
    LAMBDA_TAGGER_IMAGE_URI: '/symlink/symlink_lambda_tagger_image_uri'

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Installing build tools...
      - curl -o terraform_${TERRAFORM_VERSION}_linux_amd64.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip -o terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin
      - terraform --version
  pre_build:
    commands:
      - echo Pre-build configuration...

      - echo 'Logging in to Amazon ECR...'
      - mkdir -p ~/.docker/awsecr
      - mkdir -p ~/.docker/dockerhub
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker --config ~/.docker/awsecr login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

      - aws ecr create-repository --repository-name $INTERNAL_REPOSITORY --region ${AWS_DEFAULT_REGION} || echo "Repo has probably been created."
      - docker build --platform linux/amd64 -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$INTERNAL_REPOSITORY:$IMAGE_TAG -f ./services/$INTERNAL_SERVICES_DIR/Dockerfile .
      - docker --config ~/.docker/awsecr push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$INTERNAL_REPOSITORY:$IMAGE_TAG

      - aws ecr create-repository --repository-name $TAGGER_REPOSITORY --region ${AWS_DEFAULT_REGION} || echo "Repo has probably been created."
      - docker build --platform linux/amd64 -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$TAGGER_REPOSITORY:$IMAGE_TAG -f ./services/$TAGGER_SERVICES_DIR/Dockerfile .
      - docker --config ~/.docker/awsecr push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$TAGGER_REPOSITORY:$IMAGE_TAG > /dev/null

      - aws ecr create-repository --repository-name $DELETER_REPOSITORY --region ${AWS_DEFAULT_REGION} || echo "Repo has probably been created."
      - docker build --platform linux/amd64 -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$DELETER_REPOSITORY:$IMAGE_TAG -f ./services/$DELETER_SERVICES_DIR/Dockerfile .
      - docker --config ~/.docker/awsecr push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$DELETER_REPOSITORY:$IMAGE_TAG > /dev/null

      - cd services && terraform init

  build:
    commands:
      - echo Building...
      - |
          terraform plan \
            -var='dnanexus_drive_id=$DNANEXUS_DRIVE_ID' \
            -var='dnanexus_project_id=$DNANEXUS_PROJECT_ID' \
            -var='dnanexus_symlinks_folder=$DNANEXUS_SYMLINKS_FOLDER' \
            -var='dnanexus_token_secret_name=$DNANEXUS_TOKEN_SECRET_NAME' \
            -var='dnanexus_token_secret_key=$DNANEXUS_TOKEN_SECRET_KEY' \
            -var='target_bucket_name=$AWS_TARGET_BUCKET_NAME' \
            -var='target_bucket_filter_prefix=$AWS_TARGET_BUCKET_FILTER_PREFIX' \
            -var='symlink_lambda_internal_image_uri=$LAMBDA_INTERNAL_IMAGE_URI' \
            -var='symlink_lambda_deleter_image_uri=$LAMBDA_DELETER_IMAGE_URI' \
            -var='symlink_lambda_tagger_image_uri=$LAMBDA_TAGGER_IMAGE_URI' 



      #- terraform apply -auto-approve
